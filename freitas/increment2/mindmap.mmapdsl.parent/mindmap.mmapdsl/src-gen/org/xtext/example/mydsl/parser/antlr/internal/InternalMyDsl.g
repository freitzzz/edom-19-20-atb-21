/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Map";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMap
entryRuleMap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapRule()); }
	iv_ruleMap=ruleMap
	{ $current=$iv_ruleMap.current; }
	EOF;

// Rule Map
ruleMap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapAccess().getMapAction_0(),
					$current);
			}
		)
		otherlv_1='Map'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getMapKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='title'
			{
				newLeafNode(otherlv_3, grammarAccess.getMapAccess().getTitleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getTitleEStringParserRuleCall_3_1_0());
					}
					lv_title_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						set(
							$current,
							"title",
							lv_title_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='elements'
			{
				newLeafNode(otherlv_5, grammarAccess.getMapAccess().getElementsKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getElementsMapElementParserRuleCall_4_2_0());
					}
					lv_elements_7_0=ruleMapElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						add(
							$current,
							"elements",
							lv_elements_7_0,
							"org.xtext.example.mydsl.MyDsl.MapElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMapAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapAccess().getElementsMapElementParserRuleCall_4_3_1_0());
						}
						lv_elements_9_0=ruleMapElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapRule());
							}
							add(
								$current,
								"elements",
								lv_elements_9_0,
								"org.xtext.example.mydsl.MyDsl.MapElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMapElement
entryRuleMapElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapElementRule()); }
	iv_ruleMapElement=ruleMapElement
	{ $current=$iv_ruleMapElement.current; }
	EOF;

// Rule MapElement
ruleMapElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMapElementAccess().getRelationshipParserRuleCall_0());
		}
		this_Relationship_0=ruleRelationship
		{
			$current = $this_Relationship_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMapElementAccess().getTopicParserRuleCall_1());
		}
		this_Topic_1=ruleTopic
		{
			$current = $this_Topic_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	iv_ruleRelationship=ruleRelationship
	{ $current=$iv_ruleRelationship.current; }
	EOF;

// Rule Relationship
ruleRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Relationship'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipAccess().getRelationshipKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRelationshipAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getRelationshipAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipAccess().getTypeTypeEnumRuleCall_3_1_0());
					}
					lv_type_4_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='source'
		{
			newLeafNode(otherlv_5, grammarAccess.getRelationshipAccess().getSourceKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getSourceTopicCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='target'
		{
			newLeafNode(otherlv_7, grammarAccess.getRelationshipAccess().getTargetKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getTargetTopicCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleTopic
entryRuleTopic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopicRule()); }
	iv_ruleTopic=ruleTopic
	{ $current=$iv_ruleTopic.current; }
	EOF;

// Rule Topic
ruleTopic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTopicAccess().getTopicAction_0(),
					$current);
			}
		)
		otherlv_1='Topic'
		{
			newLeafNode(otherlv_1, grammarAccess.getTopicAccess().getTopicKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTopicAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopicRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTopicAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getTopicAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTopicAccess().getDescriptionEStringParserRuleCall_4_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopicRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='start'
			{
				newLeafNode(otherlv_6, grammarAccess.getTopicAccess().getStartKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTopicAccess().getStartEDateParserRuleCall_5_1_0());
					}
					lv_start_7_0=ruleEDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopicRule());
						}
						set(
							$current,
							"start",
							lv_start_7_0,
							"org.xtext.example.mydsl.MyDsl.EDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='end'
			{
				newLeafNode(otherlv_8, grammarAccess.getTopicAccess().getEndKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTopicAccess().getEndEDateParserRuleCall_6_1_0());
					}
					lv_end_9_0=ruleEDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopicRule());
						}
						set(
							$current,
							"end",
							lv_end_9_0,
							"org.xtext.example.mydsl.MyDsl.EDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='priority'
			{
				newLeafNode(otherlv_10, grammarAccess.getTopicAccess().getPriorityKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTopicAccess().getPriorityPriorityEnumRuleCall_7_1_0());
					}
					lv_priority_11_0=rulePriority
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopicRule());
						}
						set(
							$current,
							"priority",
							lv_priority_11_0,
							"org.xtext.example.mydsl.MyDsl.Priority");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='subtopics'
			{
				newLeafNode(otherlv_12, grammarAccess.getTopicAccess().getSubtopicsKeyword_8_0());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getTopicAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTopicRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTopicAccess().getSubtopicsTopicCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getTopicAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTopicRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTopicAccess().getSubtopicsTopicCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getTopicAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		(
			otherlv_18='parent'
			{
				newLeafNode(otherlv_18, grammarAccess.getTopicAccess().getParentKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTopicRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTopicAccess().getParentTopicCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getTopicAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDateRule()); }
	iv_ruleEDate=ruleEDate
	{ $current=$iv_ruleEDate.current.getText(); }
	EOF;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='EDate'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEDateAccess().getEDateKeyword());
	}
;

// Rule Type
ruleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='DEPENDENCY'
			{
				$current = grammarAccess.getTypeAccess().getDEPENDENCYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getDEPENDENCYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='INCLUDE'
			{
				$current = grammarAccess.getTypeAccess().getINCLUDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getINCLUDEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='EXTEND'
			{
				$current = grammarAccess.getTypeAccess().getEXTENDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getEXTENDEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Priority
rulePriority returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='HIGH'
			{
				$current = grammarAccess.getPriorityAccess().getHIGHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPriorityAccess().getHIGHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MEDIUM'
			{
				$current = grammarAccess.getPriorityAccess().getMEDIUMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPriorityAccess().getMEDIUMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='LOW'
			{
				$current = grammarAccess.getPriorityAccess().getLOWEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPriorityAccess().getLOWEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
