/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class MapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Map");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMapAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMapKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTitleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTitleEStringParserRuleCall_3_1_0 = (RuleCall)cTitleAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cElementsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cElementsMapElementParserRuleCall_4_2_0 = (RuleCall)cElementsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cElementsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cElementsMapElementParserRuleCall_4_3_1_0 = (RuleCall)cElementsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Map:
		//	{Map}
		//	'Map'
		//	'{' ('title' title=EString)? ('elements' '{' elements+=MapElement ("," elements+=MapElement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Map} 'Map' '{' ('title' title=EString)? ('elements' '{' elements+=MapElement ("," elements+=MapElement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Map}
		public Action getMapAction_0() { return cMapAction_0; }
		
		//'Map'
		public Keyword getMapKeyword_1() { return cMapKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('title' title=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'title'
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }
		
		//title=EString
		public Assignment getTitleAssignment_3_1() { return cTitleAssignment_3_1; }
		
		//EString
		public RuleCall getTitleEStringParserRuleCall_3_1_0() { return cTitleEStringParserRuleCall_3_1_0; }
		
		//('elements' '{' elements+=MapElement ("," elements+=MapElement)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'elements'
		public Keyword getElementsKeyword_4_0() { return cElementsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//elements+=MapElement
		public Assignment getElementsAssignment_4_2() { return cElementsAssignment_4_2; }
		
		//MapElement
		public RuleCall getElementsMapElementParserRuleCall_4_2_0() { return cElementsMapElementParserRuleCall_4_2_0; }
		
		//("," elements+=MapElement)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//elements+=MapElement
		public Assignment getElementsAssignment_4_3_1() { return cElementsAssignment_4_3_1; }
		
		//MapElement
		public RuleCall getElementsMapElementParserRuleCall_4_3_1_0() { return cElementsMapElementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MapElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MapElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRelationshipParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTopicParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MapElement:
		//	Relationship | Topic;
		@Override public ParserRule getRule() { return rule; }
		
		//Relationship | Topic
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Relationship
		public RuleCall getRelationshipParserRuleCall_0() { return cRelationshipParserRuleCall_0; }
		
		//Topic
		public RuleCall getTopicParserRuleCall_1() { return cTopicParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class RelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Relationship");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationshipKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTypeEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cSourceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSourceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSourceTopicCrossReference_5_0 = (CrossReference)cSourceAssignment_5.eContents().get(0);
		private final RuleCall cSourceTopicEStringParserRuleCall_5_0_1 = (RuleCall)cSourceTopicCrossReference_5_0.eContents().get(1);
		private final Keyword cTargetKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTargetTopicCrossReference_7_0 = (CrossReference)cTargetAssignment_7.eContents().get(0);
		private final RuleCall cTargetTopicEStringParserRuleCall_7_0_1 = (RuleCall)cTargetTopicCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Relationship:
		//	'Relationship'
		//	name=EString
		//	'{' ('type' type=Type)?
		//	'source' source=[Topic|EString]
		//	'target' target=[Topic|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Relationship' name=EString '{' ('type' type=Type)? 'source' source=[Topic|EString] 'target' target=[Topic|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'Relationship'
		public Keyword getRelationshipKeyword_0() { return cRelationshipKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=Type)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=Type
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_3_1_0() { return cTypeTypeEnumRuleCall_3_1_0; }
		
		//'source'
		public Keyword getSourceKeyword_4() { return cSourceKeyword_4; }
		
		//source=[Topic|EString]
		public Assignment getSourceAssignment_5() { return cSourceAssignment_5; }
		
		//[Topic|EString]
		public CrossReference getSourceTopicCrossReference_5_0() { return cSourceTopicCrossReference_5_0; }
		
		//EString
		public RuleCall getSourceTopicEStringParserRuleCall_5_0_1() { return cSourceTopicEStringParserRuleCall_5_0_1; }
		
		//'target'
		public Keyword getTargetKeyword_6() { return cTargetKeyword_6; }
		
		//target=[Topic|EString]
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }
		
		//[Topic|EString]
		public CrossReference getTargetTopicCrossReference_7_0() { return cTargetTopicCrossReference_7_0; }
		
		//EString
		public RuleCall getTargetTopicEStringParserRuleCall_7_0_1() { return cTargetTopicEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Topic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTopicAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTopicKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStartKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStartAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStartEDateParserRuleCall_5_1_0 = (RuleCall)cStartAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEndKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEndAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEndEDateParserRuleCall_6_1_0 = (RuleCall)cEndAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPriorityKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPriorityAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPriorityPriorityEnumRuleCall_7_1_0 = (RuleCall)cPriorityAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSubtopicsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cSubtopicsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cSubtopicsTopicCrossReference_8_2_0 = (CrossReference)cSubtopicsAssignment_8_2.eContents().get(0);
		private final RuleCall cSubtopicsTopicEStringParserRuleCall_8_2_0_1 = (RuleCall)cSubtopicsTopicCrossReference_8_2_0.eContents().get(1);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cSubtopicsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final CrossReference cSubtopicsTopicCrossReference_8_3_1_0 = (CrossReference)cSubtopicsAssignment_8_3_1.eContents().get(0);
		private final RuleCall cSubtopicsTopicEStringParserRuleCall_8_3_1_0_1 = (RuleCall)cSubtopicsTopicCrossReference_8_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cParentKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cParentAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cParentTopicCrossReference_9_1_0 = (CrossReference)cParentAssignment_9_1.eContents().get(0);
		private final RuleCall cParentTopicEStringParserRuleCall_9_1_0_1 = (RuleCall)cParentTopicCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Topic:
		//	{Topic}
		//	'Topic'
		//	name=EString
		//	'{' ('description' description=EString)? ('start' start=EDate)? ('end' end=EDate)? ('priority' priority=Priority)?
		//	('subtopics' '(' subtopics+=[Topic|EString] ("," subtopics+=[Topic|EString])* ')')? ('parent' parent=[Topic|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Topic} 'Topic' name=EString '{' ('description' description=EString)? ('start' start=EDate)? ('end' end=EDate)?
		//('priority' priority=Priority)? ('subtopics' '(' subtopics+=[Topic|EString] ("," subtopics+=[Topic|EString])* ')')?
		//('parent' parent=[Topic|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Topic}
		public Action getTopicAction_0() { return cTopicAction_0; }
		
		//'Topic'
		public Keyword getTopicKeyword_1() { return cTopicKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('description' description=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_4_1_0() { return cDescriptionEStringParserRuleCall_4_1_0; }
		
		//('start' start=EDate)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'start'
		public Keyword getStartKeyword_5_0() { return cStartKeyword_5_0; }
		
		//start=EDate
		public Assignment getStartAssignment_5_1() { return cStartAssignment_5_1; }
		
		//EDate
		public RuleCall getStartEDateParserRuleCall_5_1_0() { return cStartEDateParserRuleCall_5_1_0; }
		
		//('end' end=EDate)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'end'
		public Keyword getEndKeyword_6_0() { return cEndKeyword_6_0; }
		
		//end=EDate
		public Assignment getEndAssignment_6_1() { return cEndAssignment_6_1; }
		
		//EDate
		public RuleCall getEndEDateParserRuleCall_6_1_0() { return cEndEDateParserRuleCall_6_1_0; }
		
		//('priority' priority=Priority)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'priority'
		public Keyword getPriorityKeyword_7_0() { return cPriorityKeyword_7_0; }
		
		//priority=Priority
		public Assignment getPriorityAssignment_7_1() { return cPriorityAssignment_7_1; }
		
		//Priority
		public RuleCall getPriorityPriorityEnumRuleCall_7_1_0() { return cPriorityPriorityEnumRuleCall_7_1_0; }
		
		//('subtopics' '(' subtopics+=[Topic|EString] ("," subtopics+=[Topic|EString])* ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'subtopics'
		public Keyword getSubtopicsKeyword_8_0() { return cSubtopicsKeyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//subtopics+=[Topic|EString]
		public Assignment getSubtopicsAssignment_8_2() { return cSubtopicsAssignment_8_2; }
		
		//[Topic|EString]
		public CrossReference getSubtopicsTopicCrossReference_8_2_0() { return cSubtopicsTopicCrossReference_8_2_0; }
		
		//EString
		public RuleCall getSubtopicsTopicEStringParserRuleCall_8_2_0_1() { return cSubtopicsTopicEStringParserRuleCall_8_2_0_1; }
		
		//("," subtopics+=[Topic|EString])*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//subtopics+=[Topic|EString]
		public Assignment getSubtopicsAssignment_8_3_1() { return cSubtopicsAssignment_8_3_1; }
		
		//[Topic|EString]
		public CrossReference getSubtopicsTopicCrossReference_8_3_1_0() { return cSubtopicsTopicCrossReference_8_3_1_0; }
		
		//EString
		public RuleCall getSubtopicsTopicEStringParserRuleCall_8_3_1_0_1() { return cSubtopicsTopicEStringParserRuleCall_8_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_4() { return cRightParenthesisKeyword_8_4; }
		
		//('parent' parent=[Topic|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'parent'
		public Keyword getParentKeyword_9_0() { return cParentKeyword_9_0; }
		
		//parent=[Topic|EString]
		public Assignment getParentAssignment_9_1() { return cParentAssignment_9_1; }
		
		//[Topic|EString]
		public CrossReference getParentTopicCrossReference_9_1_0() { return cParentTopicCrossReference_9_1_0; }
		
		//EString
		public RuleCall getParentTopicEStringParserRuleCall_9_1_0_1() { return cParentTopicEStringParserRuleCall_9_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate ecore::EDate:
		//	'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	
	public class TypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDEPENDENCYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDEPENDENCYDEPENDENCYKeyword_0_0 = (Keyword)cDEPENDENCYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINCLUDEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINCLUDEINCLUDEKeyword_1_0 = (Keyword)cINCLUDEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEXTENDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEXTENDEXTENDKeyword_2_0 = (Keyword)cEXTENDEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Type:
		//	DEPENDENCY | INCLUDE | EXTEND;
		public EnumRule getRule() { return rule; }
		
		//DEPENDENCY | INCLUDE | EXTEND
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DEPENDENCY
		public EnumLiteralDeclaration getDEPENDENCYEnumLiteralDeclaration_0() { return cDEPENDENCYEnumLiteralDeclaration_0; }
		
		//'DEPENDENCY'
		public Keyword getDEPENDENCYDEPENDENCYKeyword_0_0() { return cDEPENDENCYDEPENDENCYKeyword_0_0; }
		
		//INCLUDE
		public EnumLiteralDeclaration getINCLUDEEnumLiteralDeclaration_1() { return cINCLUDEEnumLiteralDeclaration_1; }
		
		//'INCLUDE'
		public Keyword getINCLUDEINCLUDEKeyword_1_0() { return cINCLUDEINCLUDEKeyword_1_0; }
		
		//EXTEND
		public EnumLiteralDeclaration getEXTENDEnumLiteralDeclaration_2() { return cEXTENDEnumLiteralDeclaration_2; }
		
		//'EXTEND'
		public Keyword getEXTENDEXTENDKeyword_2_0() { return cEXTENDEXTENDKeyword_2_0; }
	}
	public class PriorityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Priority");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHIGHEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHIGHHIGHKeyword_0_0 = (Keyword)cHIGHEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIUMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMEDIUMMEDIUMKeyword_1_0 = (Keyword)cMEDIUMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLOWEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLOWLOWKeyword_2_0 = (Keyword)cLOWEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Priority:
		//	HIGH | MEDIUM | LOW;
		public EnumRule getRule() { return rule; }
		
		//HIGH | MEDIUM | LOW
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//HIGH
		public EnumLiteralDeclaration getHIGHEnumLiteralDeclaration_0() { return cHIGHEnumLiteralDeclaration_0; }
		
		//'HIGH'
		public Keyword getHIGHHIGHKeyword_0_0() { return cHIGHHIGHKeyword_0_0; }
		
		//MEDIUM
		public EnumLiteralDeclaration getMEDIUMEnumLiteralDeclaration_1() { return cMEDIUMEnumLiteralDeclaration_1; }
		
		//'MEDIUM'
		public Keyword getMEDIUMMEDIUMKeyword_1_0() { return cMEDIUMMEDIUMKeyword_1_0; }
		
		//LOW
		public EnumLiteralDeclaration getLOWEnumLiteralDeclaration_2() { return cLOWEnumLiteralDeclaration_2; }
		
		//'LOW'
		public Keyword getLOWLOWKeyword_2_0() { return cLOWLOWKeyword_2_0; }
	}
	
	private final MapElements pMap;
	private final MapElementElements pMapElement;
	private final EStringElements pEString;
	private final RelationshipElements pRelationship;
	private final TopicElements pTopic;
	private final TypeElements eType;
	private final EDateElements pEDate;
	private final PriorityElements ePriority;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMap = new MapElements();
		this.pMapElement = new MapElementElements();
		this.pEString = new EStringElements();
		this.pRelationship = new RelationshipElements();
		this.pTopic = new TopicElements();
		this.eType = new TypeElements();
		this.pEDate = new EDateElements();
		this.ePriority = new PriorityElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Map:
	//	{Map}
	//	'Map'
	//	'{' ('title' title=EString)? ('elements' '{' elements+=MapElement ("," elements+=MapElement)* '}')?
	//	'}';
	public MapElements getMapAccess() {
		return pMap;
	}
	
	public ParserRule getMapRule() {
		return getMapAccess().getRule();
	}
	
	//MapElement:
	//	Relationship | Topic;
	public MapElementElements getMapElementAccess() {
		return pMapElement;
	}
	
	public ParserRule getMapElementRule() {
		return getMapElementAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Relationship:
	//	'Relationship'
	//	name=EString
	//	'{' ('type' type=Type)?
	//	'source' source=[Topic|EString]
	//	'target' target=[Topic|EString]
	//	'}';
	public RelationshipElements getRelationshipAccess() {
		return pRelationship;
	}
	
	public ParserRule getRelationshipRule() {
		return getRelationshipAccess().getRule();
	}
	
	//Topic:
	//	{Topic}
	//	'Topic'
	//	name=EString
	//	'{' ('description' description=EString)? ('start' start=EDate)? ('end' end=EDate)? ('priority' priority=Priority)?
	//	('subtopics' '(' subtopics+=[Topic|EString] ("," subtopics+=[Topic|EString])* ')')? ('parent' parent=[Topic|EString])?
	//	'}';
	public TopicElements getTopicAccess() {
		return pTopic;
	}
	
	public ParserRule getTopicRule() {
		return getTopicAccess().getRule();
	}
	
	//enum Type:
	//	DEPENDENCY | INCLUDE | EXTEND;
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//EDate ecore::EDate:
	//	'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//enum Priority:
	//	HIGH | MEDIUM | LOW;
	public PriorityElements getPriorityAccess() {
		return ePriority;
	}
	
	public EnumRule getPriorityRule() {
		return getPriorityAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
