/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import mindmap.Map;
import mindmap.MapElement;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;
  
  protected void _format(final Map map, @Extension final IFormattableDocument document) {
    EList<MapElement> _elements = map.getElements();
    for (final MapElement mapElement : _elements) {
      document.<MapElement>format(mapElement);
    }
  }
  
  public void format(final Object map, final IFormattableDocument document) {
    if (map instanceof XtextResource) {
      _format((XtextResource)map, document);
      return;
    } else if (map instanceof Map) {
      _format((Map)map, document);
      return;
    } else if (map instanceof EObject) {
      _format((EObject)map, document);
      return;
    } else if (map == null) {
      _format((Void)null, document);
      return;
    } else if (map != null) {
      _format(map, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(map, document).toString());
    }
  }
}
