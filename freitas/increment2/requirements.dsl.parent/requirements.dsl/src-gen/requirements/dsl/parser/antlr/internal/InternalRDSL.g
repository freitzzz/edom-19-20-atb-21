/*
 * generated by Xtext 2.19.0
 */
grammar InternalRDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package requirements.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package requirements.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import requirements.dsl.services.RDSLGrammarAccess;

}

@parser::members {

 	private RDSLGrammarAccess grammarAccess;

    public InternalRDSLParser(TokenStream input, RDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		otherlv_1='Model'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='title'
			{
				newLeafNode(otherlv_3, grammarAccess.getModelAccess().getTitleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getTitleEStringParserRuleCall_3_1_0());
					}
					lv_title_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"title",
							lv_title_4_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='groups'
			{
				newLeafNode(otherlv_5, grammarAccess.getModelAccess().getGroupsKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getGroupsRequirementGroupParserRuleCall_4_2_0());
					}
					lv_groups_7_0=ruleRequirementGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"groups",
							lv_groups_7_0,
							"requirements.dsl.RDSL.RequirementGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getModelAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getGroupsRequirementGroupParserRuleCall_4_3_1_0());
						}
						lv_groups_9_0=ruleRequirementGroup
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"groups",
								lv_groups_9_0,
								"requirements.dsl.RDSL.RequirementGroup");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRequirementGroup
entryRuleRequirementGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementGroupRule()); }
	iv_ruleRequirementGroup=ruleRequirementGroup
	{ $current=$iv_ruleRequirementGroup.current; }
	EOF;

// Rule RequirementGroup
ruleRequirementGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRequirementGroupAccess().getRequirementGroupAction_0(),
					$current);
			}
		)
		otherlv_1='RequirementGroup'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequirementGroupAccess().getRequirementGroupKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementGroupAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"requirements.dsl.RDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRequirementGroupAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getRequirementGroupAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementGroupAccess().getDescriptionEStringParserRuleCall_4_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='id'
			{
				newLeafNode(otherlv_6, grammarAccess.getRequirementGroupAccess().getIdKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementGroupAccess().getIdEStringParserRuleCall_5_1_0());
					}
					lv_id_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
						}
						set(
							$current,
							"id",
							lv_id_7_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='requirements'
			{
				newLeafNode(otherlv_8, grammarAccess.getRequirementGroupAccess().getRequirementsKeyword_6_0());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getRequirementGroupAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementGroupAccess().getRequirementsRequirementParserRuleCall_6_2_0());
					}
					lv_requirements_10_0=ruleRequirement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
						}
						add(
							$current,
							"requirements",
							lv_requirements_10_0,
							"requirements.dsl.RDSL.Requirement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getRequirementGroupAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementGroupAccess().getRequirementsRequirementParserRuleCall_6_3_1_0());
						}
						lv_requirements_12_0=ruleRequirement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
							}
							add(
								$current,
								"requirements",
								lv_requirements_12_0,
								"requirements.dsl.RDSL.Requirement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getRequirementGroupAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_14='children'
			{
				newLeafNode(otherlv_14, grammarAccess.getRequirementGroupAccess().getChildrenKeyword_7_0());
			}
			otherlv_15='{'
			{
				newLeafNode(otherlv_15, grammarAccess.getRequirementGroupAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementGroupAccess().getChildrenRequirementGroupParserRuleCall_7_2_0());
					}
					lv_children_16_0=ruleRequirementGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
						}
						add(
							$current,
							"children",
							lv_children_16_0,
							"requirements.dsl.RDSL.RequirementGroup");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_17=','
				{
					newLeafNode(otherlv_17, grammarAccess.getRequirementGroupAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementGroupAccess().getChildrenRequirementGroupParserRuleCall_7_3_1_0());
						}
						lv_children_18_0=ruleRequirementGroup
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementGroupRule());
							}
							add(
								$current,
								"children",
								lv_children_18_0,
								"requirements.dsl.RDSL.RequirementGroup");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getRequirementGroupAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getRequirementGroupAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	iv_ruleRequirement=ruleRequirement
	{ $current=$iv_ruleRequirement.current; }
	EOF;

// Rule Requirement
ruleRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Requirement'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='title'
			{
				newLeafNode(otherlv_2, grammarAccess.getRequirementAccess().getTitleKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getTitleEStringParserRuleCall_2_1_0());
					}
					lv_title_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"title",
							lv_title_3_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getRequirementAccess().getDescriptionKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getDescriptionEStringParserRuleCall_3_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='type'
			{
				newLeafNode(otherlv_6, grammarAccess.getRequirementAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getTypeTypeEnumRuleCall_4_1_0());
					}
					lv_type_7_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"requirements.dsl.RDSL.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='priority'
			{
				newLeafNode(otherlv_8, grammarAccess.getRequirementAccess().getPriorityKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getPriorityPriorityEnumRuleCall_5_1_0());
					}
					lv_priority_9_0=rulePriority
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"priority",
							lv_priority_9_0,
							"requirements.dsl.RDSL.Priority");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='author'
			{
				newLeafNode(otherlv_10, grammarAccess.getRequirementAccess().getAuthorKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getAuthorEStringParserRuleCall_6_1_0());
					}
					lv_author_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"author",
							lv_author_11_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='created'
			{
				newLeafNode(otherlv_12, grammarAccess.getRequirementAccess().getCreatedKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getCreatedEDateParserRuleCall_7_1_0());
					}
					lv_created_13_0=ruleEDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"created",
							lv_created_13_0,
							"requirements.dsl.RDSL.EDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='id'
			{
				newLeafNode(otherlv_14, grammarAccess.getRequirementAccess().getIdKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getIdEStringParserRuleCall_8_1_0());
					}
					lv_id_15_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"id",
							lv_id_15_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='state'
			{
				newLeafNode(otherlv_16, grammarAccess.getRequirementAccess().getStateKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getStateStateEnumRuleCall_9_1_0());
					}
					lv_state_17_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"state",
							lv_state_17_0,
							"requirements.dsl.RDSL.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='resolution'
			{
				newLeafNode(otherlv_18, grammarAccess.getRequirementAccess().getResolutionKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getResolutionResolutionEnumRuleCall_10_1_0());
					}
					lv_resolution_19_0=ruleResolution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"resolution",
							lv_resolution_19_0,
							"requirements.dsl.RDSL.Resolution");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_20='dependencies'
			{
				newLeafNode(otherlv_20, grammarAccess.getRequirementAccess().getDependenciesKeyword_11_0());
			}
			otherlv_21='('
			{
				newLeafNode(otherlv_21, grammarAccess.getRequirementAccess().getLeftParenthesisKeyword_11_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getDependenciesRequirementCrossReference_11_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_23=','
				{
					newLeafNode(otherlv_23, grammarAccess.getRequirementAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRequirementRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getDependenciesRequirementCrossReference_11_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_25=')'
			{
				newLeafNode(otherlv_25, grammarAccess.getRequirementAccess().getRightParenthesisKeyword_11_4());
			}
		)?
		otherlv_26='version'
		{
			newLeafNode(otherlv_26, grammarAccess.getRequirementAccess().getVersionKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementAccess().getVersionVersionParserRuleCall_13_0());
				}
				lv_version_27_0=ruleVersion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementRule());
					}
					set(
						$current,
						"version",
						lv_version_27_0,
						"requirements.dsl.RDSL.Version");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_28='comments'
			{
				newLeafNode(otherlv_28, grammarAccess.getRequirementAccess().getCommentsKeyword_14_0());
			}
			otherlv_29='{'
			{
				newLeafNode(otherlv_29, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getCommentsCommentParserRuleCall_14_2_0());
					}
					lv_comments_30_0=ruleComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						add(
							$current,
							"comments",
							lv_comments_30_0,
							"requirements.dsl.RDSL.Comment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_31=','
				{
					newLeafNode(otherlv_31, grammarAccess.getRequirementAccess().getCommaKeyword_14_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getCommentsCommentParserRuleCall_14_3_1_0());
						}
						lv_comments_32_0=ruleComment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementRule());
							}
							add(
								$current,
								"comments",
								lv_comments_32_0,
								"requirements.dsl.RDSL.Comment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_33='}'
			{
				newLeafNode(otherlv_33, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_14_4());
			}
		)?
		(
			otherlv_34='children'
			{
				newLeafNode(otherlv_34, grammarAccess.getRequirementAccess().getChildrenKeyword_15_0());
			}
			otherlv_35='{'
			{
				newLeafNode(otherlv_35, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_15_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getChildrenRequirementParserRuleCall_15_2_0());
					}
					lv_children_36_0=ruleRequirement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						add(
							$current,
							"children",
							lv_children_36_0,
							"requirements.dsl.RDSL.Requirement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_37=','
				{
					newLeafNode(otherlv_37, grammarAccess.getRequirementAccess().getCommaKeyword_15_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getChildrenRequirementParserRuleCall_15_3_1_0());
						}
						lv_children_38_0=ruleRequirement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementRule());
							}
							add(
								$current,
								"children",
								lv_children_38_0,
								"requirements.dsl.RDSL.Requirement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_39='}'
			{
				newLeafNode(otherlv_39, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_15_4());
			}
		)?
		otherlv_40='}'
		{
			newLeafNode(otherlv_40, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_16());
		}
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current; }
	EOF;

// Rule Version
ruleVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Version'
		{
			newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVersionAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='major'
		{
			newLeafNode(otherlv_2, grammarAccess.getVersionAccess().getMajorKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVersionAccess().getMajorEIntParserRuleCall_3_0());
				}
				lv_major_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVersionRule());
					}
					set(
						$current,
						"major",
						lv_major_3_0,
						"requirements.dsl.RDSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='minor'
		{
			newLeafNode(otherlv_4, grammarAccess.getVersionAccess().getMinorKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVersionAccess().getMinorEIntParserRuleCall_5_0());
				}
				lv_minor_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVersionRule());
					}
					set(
						$current,
						"minor",
						lv_minor_5_0,
						"requirements.dsl.RDSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='service'
		{
			newLeafNode(otherlv_6, grammarAccess.getVersionAccess().getServiceKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVersionAccess().getServiceEIntParserRuleCall_7_0());
				}
				lv_service_7_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVersionRule());
					}
					set(
						$current,
						"service",
						lv_service_7_0,
						"requirements.dsl.RDSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getVersionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	iv_ruleComment=ruleComment
	{ $current=$iv_ruleComment.current; }
	EOF;

// Rule Comment
ruleComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCommentAccess().getCommentAction_0(),
					$current);
			}
		)
		otherlv_1='Comment'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommentAccess().getCommentKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCommentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subject'
			{
				newLeafNode(otherlv_3, grammarAccess.getCommentAccess().getSubjectKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommentAccess().getSubjectEStringParserRuleCall_3_1_0());
					}
					lv_subject_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommentRule());
						}
						set(
							$current,
							"subject",
							lv_subject_4_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='body'
			{
				newLeafNode(otherlv_5, grammarAccess.getCommentAccess().getBodyKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommentAccess().getBodyEStringParserRuleCall_4_1_0());
					}
					lv_body_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommentRule());
						}
						set(
							$current,
							"body",
							lv_body_6_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='author'
			{
				newLeafNode(otherlv_7, grammarAccess.getCommentAccess().getAuthorKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommentAccess().getAuthorEStringParserRuleCall_5_1_0());
					}
					lv_author_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommentRule());
						}
						set(
							$current,
							"author",
							lv_author_8_0,
							"requirements.dsl.RDSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='created'
			{
				newLeafNode(otherlv_9, grammarAccess.getCommentAccess().getCreatedKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommentAccess().getCreatedEDateParserRuleCall_6_1_0());
					}
					lv_created_10_0=ruleEDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommentRule());
						}
						set(
							$current,
							"created",
							lv_created_10_0,
							"requirements.dsl.RDSL.EDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='children'
			{
				newLeafNode(otherlv_11, grammarAccess.getCommentAccess().getChildrenKeyword_7_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getCommentAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommentAccess().getChildrenCommentParserRuleCall_7_2_0());
					}
					lv_children_13_0=ruleComment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommentRule());
						}
						add(
							$current,
							"children",
							lv_children_13_0,
							"requirements.dsl.RDSL.Comment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getCommentAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommentAccess().getChildrenCommentParserRuleCall_7_3_1_0());
						}
						lv_children_15_0=ruleComment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommentRule());
							}
							add(
								$current,
								"children",
								lv_children_15_0,
								"requirements.dsl.RDSL.Comment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getCommentAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getCommentAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDateRule()); }
	iv_ruleEDate=ruleEDate
	{ $current=$iv_ruleEDate.current.getText(); }
	EOF;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEDateAccess().getEStringParserRuleCall());
	}
	this_EString_0=ruleEString
	{
		$current.merge(this_EString_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Rule Type
ruleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FUNCTIONAL'
			{
				$current = grammarAccess.getTypeAccess().getFUNCTIONALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getFUNCTIONALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NONFUNCTIONAL'
			{
				$current = grammarAccess.getTypeAccess().getNONFUNCTIONALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getNONFUNCTIONALEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Priority
rulePriority returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='HIGH'
			{
				$current = grammarAccess.getPriorityAccess().getHIGHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPriorityAccess().getHIGHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MEDIUM'
			{
				$current = grammarAccess.getPriorityAccess().getMEDIUMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPriorityAccess().getMEDIUMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='LOW'
			{
				$current = grammarAccess.getPriorityAccess().getLOWEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPriorityAccess().getLOWEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule State
ruleState returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='NEW'
			{
				$current = grammarAccess.getStateAccess().getNEWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStateAccess().getNEWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='REVIEWED'
			{
				$current = grammarAccess.getStateAccess().getREVIEWEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStateAccess().getREVIEWEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='APPROVED'
			{
				$current = grammarAccess.getStateAccess().getAPPROVEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStateAccess().getAPPROVEDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='RESOLVED'
			{
				$current = grammarAccess.getStateAccess().getRESOLVEDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStateAccess().getRESOLVEDEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Resolution
ruleResolution returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='INVALID'
			{
				$current = grammarAccess.getResolutionAccess().getINVALIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getResolutionAccess().getINVALIDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ACCEPTED'
			{
				$current = grammarAccess.getResolutionAccess().getACCEPTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getResolutionAccess().getACCEPTEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='IMPLEMENTED'
			{
				$current = grammarAccess.getResolutionAccess().getIMPLEMENTEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getResolutionAccess().getIMPLEMENTEDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='LATER'
			{
				$current = grammarAccess.getResolutionAccess().getLATEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getResolutionAccess().getLATEREnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
