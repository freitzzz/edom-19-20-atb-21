/*
 * generated by Xtext 2.19.0
 */
package requirements.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import requirements.Model
import requirements.RequirementGroup
import requirements.dsl.services.RDSLGrammarAccess

class RDSLFormatter extends AbstractFormatter2 {
	
	@Inject extension RDSLGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (requirementGroup : model.groups) {
			requirementGroup.format
		}
	}

	def dispatch void format(RequirementGroup requirementGroup, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (requirement : requirementGroup.requirements) {
			requirement.format
		}
		for (_requirementGroup : requirementGroup.children) {
			_requirementGroup.format
		}
	}
	
	// TODO: implement for Requirement, Comment
}
