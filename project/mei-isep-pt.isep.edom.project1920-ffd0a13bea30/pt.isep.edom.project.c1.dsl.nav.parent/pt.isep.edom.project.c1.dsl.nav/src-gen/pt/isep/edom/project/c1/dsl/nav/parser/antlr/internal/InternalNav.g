/*
 * generated by Xtext 2.12.0
 */
grammar InternalNav;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package pt.isep.edom.project.c1.dsl.nav.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package pt.isep.edom.project.c1.dsl.nav.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import pt.isep.edom.project.c1.dsl.nav.services.NavGrammarAccess;

}

@parser::members {

 	private NavGrammarAccess grammarAccess;

    public InternalNavParser(TokenStream input, NavGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "NavModel";
   	}

   	@Override
   	protected NavGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleNavModel
entryRuleNavModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavModelRule()); }
	iv_ruleNavModel=ruleNavModel
	{ $current=$iv_ruleNavModel.current; }
	EOF;

// Rule NavModel
ruleNavModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNavModelAccess().getNavModelAction_0(),
					$current);
			}
		)
		otherlv_1='NavModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getNavModelAccess().getNavModelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNavModelAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavModelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"pt.isep.edom.project.c1.dsl.nav.Nav.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getNavModelAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='menu'
			{
				newLeafNode(otherlv_4, grammarAccess.getNavModelAccess().getMenuKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavModelAccess().getMenuMenuParserRuleCall_4_1_0());
					}
					lv_menu_5_0=ruleMenu
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavModelRule());
						}
						set(
							$current,
							"menu",
							lv_menu_5_0,
							"pt.isep.edom.project.c1.dsl.nav.Nav.Menu");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getNavModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleMenu
entryRuleMenu returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMenuRule()); }
	iv_ruleMenu=ruleMenu
	{ $current=$iv_ruleMenu.current; }
	EOF;

// Rule Menu
ruleMenu returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMenuAccess().getMenuAction_0(),
					$current);
			}
		)
		otherlv_1='Menu'
		{
			newLeafNode(otherlv_1, grammarAccess.getMenuAccess().getMenuKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMenuAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMenuRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"pt.isep.edom.project.c1.dsl.nav.Nav.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMenuAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='pages'
			{
				newLeafNode(otherlv_4, grammarAccess.getMenuAccess().getPagesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getMenuAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMenuAccess().getPagesPageParserRuleCall_4_2_0());
					}
					lv_pages_6_0=rulePage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMenuRule());
						}
						add(
							$current,
							"pages",
							lv_pages_6_0,
							"pt.isep.edom.project.c1.dsl.nav.Nav.Page");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMenuAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMenuAccess().getPagesPageParserRuleCall_4_3_1_0());
						}
						lv_pages_8_0=rulePage
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMenuRule());
							}
							add(
								$current,
								"pages",
								lv_pages_8_0,
								"pt.isep.edom.project.c1.dsl.nav.Nav.Page");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMenuAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMenuAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePage
entryRulePage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	iv_rulePage=rulePage
	{ $current=$iv_rulePage.current; }
	EOF;

// Rule Page
rulePage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPageAccess().getPageAction_0(),
					$current);
			}
		)
		otherlv_1='Page'
		{
			newLeafNode(otherlv_1, grammarAccess.getPageAccess().getPageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPageAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"pt.isep.edom.project.c1.dsl.nav.Nav.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
